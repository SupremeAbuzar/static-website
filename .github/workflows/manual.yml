name: Static Website CI/CD

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      short_sha: ${{ steps.set_sha.outputs.short_sha }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Build Static Site
        run: |
          mkdir -p dist
          echo "<h1>My Static Site</h1>" > dist/index.html

      - name: Upload dist as artifact
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/

      - name: Set short commit SHA
        id: set_sha
        run: echo "short_sha=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Download dist artifact
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist/

      - name: Test index.html exists
        run: |
          test -f dist/index.html && echo "Test passed!" || (echo "Test failed!" && exit 1)

  docker-build:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Download dist
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist/

      - name: Build Docker image
        run: docker build -t static-site:build .

      - name: Save Docker image
        run: docker save static-site:build -o static-site.tar

      - name: Upload Docker image
        uses: actions/upload-artifact@v4
        with:
          name: docker-image
          path: static-site.tar

  docker-tag:
    runs-on: ubuntu-latest
    needs: [docker-build, build]
    outputs:
      image_tag: ${{ steps.tag_step.outputs.image_tag }}
    steps:
      - name: Download Docker image
        uses: actions/download-artifact@v4
        with:
          name: docker-image
          path: .

      - name: Load Docker image
        run: docker load -i static-site.tar

      - name: Tag Docker image
        id: tag_step
        run: |
          IMAGE_NAME=your-dockerhub-username/static-site
          GIT_SHA=${{ needs.build.outputs.short_sha }}
          docker tag static-site:build $IMAGE_NAME:latest
          docker tag static-site:build $IMAGE_NAME:$GIT_SHA
          docker save $IMAGE_NAME:latest -o tagged-latest.tar
          docker save $IMAGE_NAME:$GIT_SHA -o tagged-sha.tar
          echo "image_tag=$GIT_SHA" >> $GITHUB_OUTPUT

      - name: Upload tagged latest image
        uses: actions/upload-artifact@v4
        with:
          name: tagged-latest
          path: tagged-latest.tar

      - name: Upload tagged sha image
        uses: actions/upload-artifact@v4
        with:
          name: tagged-sha
          path: tagged-sha.tar

  docker-push:
    runs-on: ubuntu-latest
    needs: [docker-tag, build]
    steps:
      - name: Download tagged latest
        uses: actions/download-artifact@v4
        with:
          name: tagged-latest
          path: .

      - name: Download tagged SHA
        uses: actions/download-artifact@v4
        with:
          name: tagged-sha
          path: .

      - name: Load Docker images
        run: |
          docker load -i tagged-latest.tar
          docker load -i tagged-sha.tar

      - name: Docker Login
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Push Docker images
        run: |
          docker push your-dockerhub-username/static-site:latest
          docker push your-dockerhub-username/static-site:${{ needs.build.outputs.short_sha }}
